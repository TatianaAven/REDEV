//** ------------ Числа ------------ **\\
//1. Напиши функцию, которая принимает целое число в качестве аргумента и возвращает `true`, если число четное, и `false`, если нечетное.
//2. Напиши функцию, которая генерирует случайное целое число в заданном диапазоне от `min` до `max` (включительно).
//3. Напиши функцию, которая принимает дробное число и возвращает его, округленное до указанного количества знаков после запятой.
//4. Напиши функцию, которая принимает число и его степень и возвращает результат возведения числа в указанную степень, используя метод `Math.pow()`.
//5. Напиши функцию, которая принимает число и возвращает его квадратный корень, используя метод `Math.sqrt()`.
//7. Напиши функцию, которая принимает два числа в качестве аргументов и возвращает их сумму. Если один из аргументов не является числом, то функция должна вернуть сообщение "Ошибка: один из аргументов не является числом".
//8. Напиши функцию, которая принимает строку и пытается преобразовать её в число. Если преобразование невозможно, функция должна вернуть NaN.
//9. Напиши функцию, которая принимает аргумент и использует функцию isNaN, чтобы проверить, является ли аргумент NaN. Функция должна вернуть строку "Это NaN", если аргумент NaN, и строку "Это не NaN" в противном случае.
//10. Напиши функцию, которая принимает аргумент и возвращает `true`, если аргумент является Infinity или -Infinity, и `false` в противном случае.
//11. Напиши функцию, которая принимает два числа в качестве аргументов и возвращает результат деления первого на второе. Если второе число равно 0, функция должна вернуть Infinity или -Infinity в зависимости от знака первого числа.
//12. Напиши функцию, которая принимает строку в качестве аргумента и возвращает `true`, если строка может быть преобразована в число с помощью parseInt, и `false` в противном случае.



//** ------------ Строки ------------ **\\

//1. Напиши функцию, которая принимает строку и возвращает количество символов в ней.
//2. Напиши функцию, которая принимает строку и возвращает новую строку, в которой символы идут в обратном порядке.
//3. Напиши функцию, которая принимает строку и возвращает `true`, если строка является палиндромом, и `false` в противном случае.
//4. Напиши функцию, которая принимает две строки: строку и подстроку, и возвращает `true`, если подстрока содержится в строке, и `false` в противном случае.
//5. Напиши функцию, которая принимает строку и возвращает новую строку, где все символы в верхнем регистре.
//6. Напиши функцию, которая принимает строку и возвращает новую строку, где все символы `“a”` в верхнем регистре.
//7. Напиши функцию, которая принимает строку и подстроку, и возвращает количество вхождений подстроки в строку.
//8. Напиши функцию, которая принимает строку и индекс символа, а затем возвращает символ, находящийся в этом индексе.
//9. Напиши функцию, которая принимает строку и возвращает новую строку, где регистр каждого символа инвертирован.
//10. Напиши функцию, которая принимает строку и возвращает `true`, если строка представляет собой числовую строку, и `false` в противном случае.
//11. Напиши функцию, которая принимает строку и символ, а затем возвращает подстроку, начиная с начала строки и заканчивая символом (не включая его)
//12. Напиши функцию, которая принимает строку и два символа, а затем возвращает подстроку, которая находится между этими символами (включая их)
//13. Напиши функцию, которая принимает две строки и возвращает индекс первого различного символа в них. Если строки идентичны, функция должна вернуть -1.

//** ------------ Объекты ------------ **\\

//1. Создай объект `person` с свойствами `name`, `age` и `city`. Задай им значения в соответствии с какими-то реальными данными.
//2. Выведи в консоль имя и возраст из объекта `person`, который ты создал (2-я способами).
//3. Добавь объекту `person` свойство `email` со значением, представляющим собой электронную почту.
//4. Измени возраст в объекте `person` на новое значение и выведи обновленный объект в консоль.
//5. Удали свойство `city` из объекта `person` и выведи обновленный объект в консоль.
//6. Напиши функцию `createObject(property1, value1, property2, value2, ...)`, которая принимает аргументы в парах: имя свойства и его значение, а затем создает и возвращает объект с этими свойствами.
//7. Напиши функцию, которая принимает объект в качестве аргумента и выводит в консоль все его свойства и их значения.
//8. Напиши функцию, которая принимает объект, имя свойства и новое значение в качестве аргументов, а затем изменяет значение указанного свойства в объекте.
//9. Напиши функцию, которая принимает объект и имя свойства в качестве аргументов и возвращает `true`, если свойство существует в объекте, и `false` в противном случае.
//10. Напиши функцию, которая принимает имя свойства и объект, а затем проверяет, есть ли такое свойство в объекте. Функция должна вернуть `true`, если свойство существует, и `false` в противном случае.
//11. В объекте `person` добавь метод `introduce()`, который выводит сообщение вида "Привет, меня зовут [имя] и мне [возраст] лет" с использованием свойств объекта `person`.
//12. Напиши функцию `countProperties(obj)`, которая принимает объект и возвращает количество его свойств.
//13. Создай объект `calculator` с методами `add()`, `subtract()`, `multiply()` и `divide()`, которые принимают два аргумента (числа) и возвращают результат соответствующей операции.
//14. Напиши функцию `calculateTotalPrice(cart)`, которая принимает объект `cart` с товарами (где ключ - название товара, значение - цена), и возвращает общую стоимость всех товаров в корзине.
//15. Создай объект `counter`, который имеет методы `increment()` для увеличения значения счетчика и `decrement()` для его уменьшения. Добавь метод `reset()` для сброса счетчика в начальное значение.
//16. Напиши функцию, которая принимает два объекта в качестве аргументов и возвращает `true`, если они содержат одинаковые наборы ключей и значения для каждого ключа, и `false` в противном случае.
//17. Напиши функцию, которая принимает два объекта и строку, представляющую имя свойства. Функция должна вернуть `true`, если значения этого свойства в двух объектах равны, и `false` в противном случае.
//18. Напиши функцию, которая принимает объект в качестве аргумента и возвращает его поверхностную копию.
//19. Создай глубокую копию объекта и измени значение одного из его свойств. Убедись, что оригинальный объект не изменился.
//20. Создай два объекта: `user1` с методом `sayName`, который выводит его имя, и `user2` без метода `sayName`. Используй метод `call()` для применения метода `sayName` из `user1` к `user2`.
//21. Создай функцию `greet`, которая принимает два аргумента: `greeting` и `name`, и выводит приветственное сообщение. Используй метод `bind()`, чтобы создать новую функцию `sayHello`, которая всегда будет выводить сообщение "Привет, [name]!".
//22. Создай функцию `calculateSum`, которая принимает три аргумента (a, b, c) и возвращает их сумму. Используй метод `bind()` для передачи аргументов в функцию `calculateSum`.
//23. Создай функцию-конструктор `Person`, которая принимает параметры `name` и `age` и создает объект с этими свойствами и метод `sayHello`, который выводит сообщение об имени и возрасте человека.
//24. Создай функцию `createPerson`, которая принимает параметры `name` и `age` и создает объект с этими свойствами и метод `sayHello`, который выводит сообщение об имени и возрасте человека.
//25. Напиши функцию, которая принимает два объекта и возвращает массив строк, представляющий имена свойств, которые присутствуют в обоих объектах.